#!/usr/bin/env bash
#------------------------{ Dev info }-----------------------------------------------------------------------------------
#Created by: Ivan Marov <ie.marov@gmail.com>
#Source: https://github.com/vaniacer/piu-piu-SH
# check bash version
case ${BASH_VERSINFO[@]::2} in [1-3]' '[0-9][0-9]|[1-3]' '[0-9]|'4 '[0-1])
    echo -e "\nYour BASH is too short!) 4.2+ required to run this game, your is - ${BASH_VERSINFO[@]}"
    exit 1;;
esac
#--{ Start opt }--------------------------------------{ description }-------------------------{ def. values }-----------
     enumber=0                                        # current enemy counter                      (0)
       enmax=100                                      # max number of akiens                       (10)
       month=`date +'%m'`                             # get current month
         spd=0.0001                                   # game\read speed                            (0.0001)
          LX=1                                        # grass X counter
#--------------------------------------------------------------------+
#Color picker, usage: printf $BLD$CUR$RED$BBLU'Hello World!'$DEF     |
#-------------------------+--------------------------------+---------+
#       Text color        |       Background color         |         |
#-----------+-------------+--------------+-----------------+         |
# Base color|Lighter shade| Base color   | Lighter shade   |         |
#-----------+-------------+--------------+-----------------+         |
BLK='\e[30m'; blk='\e[90m'; BBLK='\e[40m'; bblk='\e[100m' #| Black   |
RED='\e[31m'; red='\e[91m'; BRED='\e[41m'; bred='\e[101m' #| Red     |
GRN='\e[32m'; grn='\e[92m'; BGRN='\e[42m'; bgrn='\e[102m' #| Green   |
YLW='\e[33m'; ylw='\e[93m'; BYLW='\e[43m'; bylw='\e[103m' #| Yellow  |
BLU='\e[34m'; blu='\e[94m'; BBLU='\e[44m'; bblu='\e[104m' #| Blue    |
MGN='\e[35m'; mgn='\e[95m'; BMGN='\e[45m'; bmgn='\e[105m' #| Magenta |
CYN='\e[36m'; cyn='\e[96m'; BCYN='\e[46m'; bcyn='\e[106m' #| Cyan    |
WHT='\e[37m'; wht='\e[97m'; BWHT='\e[47m'; bwht='\e[107m' #| White   |
#-------------------------{ Effects }----------------------+---------+
DEF='\e[0m'   #Default color and effects                             |
BLD='\e[1m'   #Bold\brighter                                         |
DIM='\e[2m'   #Dim\darker                                            |
CUR='\e[3m'   #Italic font                                           |
UND='\e[4m'   #Underline                                             |
INV='\e[7m'   #Inverted                                              |
COF='\e[?25l' #Cursor Off                                            |
CON='\e[?25h' #Cursor On                                             |
#------------------------{ Functions }-------------------------------+
# Text positioning, usage: XY 10 10 'Hello World!'                   |
XY () { printf "\e[$2;${1}H$3"; }                                   #|
# Print line, usage: line - 10 | line -= 20 | line 'Hello World!' 20 |
line () { printf -v _L %$2s; printf -- "${_L// /$1}"; }             #|
# Create sequence like {0..(X-1)}                                    |
que () { printf -v _N %$1s; _N=(${_N// / 1}); printf "${!_N[*]}"; } #|
#--------------------------------------------------------------------+
[[ -e ~/.piuconf ]] && . ~/.piuconf
#------------------------{ Sprites }------------------------------------------------------------------------------------
case $month in
    0[1-4]|12)
        SKY=$DEF$bwht         # winter & early spring sky
        LND=$DEF$BLD$WHT$BWHT # winter & early spring land
        CLD=30                # winter & early spring clouds rnd
        TRE=50;;              # winter & early spring trees rnd

    0[5-8]   )
        SKY=$DEF$bcyn         # late spring & summer sky
        LND=$DEF$DIM$GRN$bgrn # late spring & summer land
        CLD=50                # late spring & summer clouds rnd
        TRE=20;;              # late spring & summer trees rnd

    09|1[0-1])
        SKY=$DEF$BCYN         # autumn sky
        LND=$DEF$DIM$YLW$BGRN # autumn land
        CLD=20                # autumn clouds rnd
        TRE=50;;              # autumn trees rnd
esac
gun=(‚îÄ ‚îÄ ‚ïê ‚â° ‚â£ ùÑö)
grass=(‚îÇ ' ' ‚ïë ' ' ‚ñë ' ' ‚ñí ' ' ‚ñì ' ' ‚ñà)    # grass types
#------------------------{ Aliens }-------------------------------------------------------------------------------------

CM1=$SKY$DIM$BLK
small=("${SKY}_Z_  ${SKY}_Z_  ${RED}o$CM1"
       "${SKY}_Z_  ${RED}o    ${SKY}_Z_$CM1"
       "${RED}o    ${SKY}_Z_  ${SKY}_Z_$CM1"
       "${SKY}_Z_  ${SKY}_Z_  ${SKY}_Z_$CM1")

sprite_alien () {
    mov && ENM[en]="alien 3 5 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset ENM[en]; ((enumber--)); return; }
    X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+2];$[OX+1]H"
    #012345
    #1 ___
    #2( o )
    #3 `¬Ø¬¥
    #                             1        2   3   4   5
    cut "\\e[$OY;${SX}H$CM1"      '' "$X1"'_' '_' '_'      #1
    cut "\\e[$[OY+1];${SX}H$CM1"  '('  ${small[AS]}   ')'  #2
    cut "\\e[$[OY+2];${SX}H$CM1"  '' "$X2"'`' '¬Ø' '¬¥'      #3
}

#------------------------{ Clouds }-------------------------------------------------------------------------------------
case $month in
    0[1-4]|12) C1C=$SKY$DIM$CYN;; # winter & early spring
    0[5-8]   ) C1C=$SKY$DIM$WHT;; # late spring & summer
    09|1[0-1]) C1C=$SKY$blk    ;; # autumn
esac

sprite_cloud1 () {
    mov && BP1[i1]="cloud1 3 6 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP1[i1]; return; }
    X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+2];$[OX+1]H"
    #0123456
    #1 ,-+.
    #2(    )
    #3 `+-¬¥
    #                              1        2   3   4   5   6
    cut "\\e[$OY;${SX}H$C1C"       '' "$X1"',' '-' '+' '.'     #1
    cut "\\e[$[$OY+1];${SX}H$C1C"  '('     ' ' ' ' ' ' ' ' ')' #2
    cut "\\e[$[$OY+2];${SX}H$C1C"  '' "$X2"'`' '+' '-' '¬¥'     #3
}

sprite_cloud2 () {
    mov && BP2[i2]="cloud2 3 8 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP2[i2]; return; }
    X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+2];$[OX+1]H"
    #012345678
    #1 ,-._..
    #2(      )
    #3 `-...¬¥
    #                              1        2   3   4   5   6   7   8
    cut "\\e[$OY;${SX}H$C1C"       '' "$X1"',' '-' '.' '_' '.' '.'     #1   
    cut "\\e[$[$OY+1];${SX}H$C1C"  '('     ' ' ' ' ' ' ' ' ' ' ' ' ')' #2
    cut "\\e[$[$OY+2];${SX}H$C1C"  '' "$X2"'`' '-' '.' '.' '.' '¬¥'     #3
}

sprite_cloud3 () {
    mov && BP3[i3]="cloud3 3 11 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP3[i3]; return; }
    X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+2];$[OX+1]H"
    #0123456789AB
    #1 ,+¬Ø`.-¬Ø`.
    #2(         )
    #3 `--.,,.-¬¥
    #                              1        2   3   4   5   6   7   8   9   A   B
    cut "\\e[$OY;${SX}H$C1C"       '' "$X1"',' '+' '¬Ø' '`' '.' '-' '¬Ø' '`' '.'     #1
    cut "\\e[$[$OY+1];${SX}H$C1C"  '('     ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ')' #2
    cut "\\e[$[$OY+2];${SX}H$C1C"  '' "$X2"'`' '-' '-' '.' ',' ',' '.' '-' '¬¥'     #3
}

#------------------------{ Trees }--------------------------------------------------------------------------------------
case $month in
    0[1-4]|12) T1C=$SKY$DIM$WHT tree1H=3;; # winter & early spring
    0[5-8]   ) T1C=$SKY$DIM$GRN tree1H=4;; # late spring & summer
    09|1[0-1]) T1C=$SKY$DIM$YLW tree1H=4;; # autumn
esac
sprite_tree1 () {
    case $month in
        0[1-4]|12)
        mov && BP1[i1]="tree1 3 2 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP1[i1]; return; }
        X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+2];$[OX+1]H" CM1="$DIM$blk"
        #0123
        #1 |/
        #2\|
        #3 |
        #                              1           2      3
        cut "\\e[$OY;${SX}H$T1C"       ''    "$X1"'|'    '/'  #1
        cut "\\e[$[$OY+1];${SX}H$T1C"  '\\' "$CM1"'|'         #2
        cut "\\e[$[$OY+2];${SX}H$CM1"  ''    "$X2"'|';;       #3

        *)
        mov && BP1[i1]="tree1 4 2 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP1[i1]; return; }
        X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+3];$[OX+1]H" CM1="$DIM$blk"
        #0123
        #1 _
        #2/ \
        #3\|/
        #4 |
        #                               1            2         3
        cut "\\e[$OY;${SX}H$T1C"       ''      "$X1"'_'            #1
        cut "\\e[$[$OY+1];${SX}H$T1C"  '/'          ' '       '\\' #2
        cut "\\e[$[$OY+2];${SX}H$T1C"  '\\'   "$CM1"'|' "$T1C"'/'  #3
        cut "\\e[$[$OY+3];${SX}H$T1C"  ''  "$X2$CM1"'|';;          #4
    esac
}

case $month in
    0[1-4]|12) T2C=$SKY$WHT tree2H=5;; # winter & early spring
    0[5-8]   ) T2C=$SKY$GRN tree2H=6;; # late spring & summer
    09|1[0-1]) T2C=$SKY$YLW tree2H=6;; # autumn
esac
sprite_tree2 () {
    case $month in
        0[1-4]|12)
        mov && BP2[i2]="tree2 5 5 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP2[i2]; return; }
        X1="\\e[$OY;$[OX+3]H" X2="\\e[$[OY+2];$[OX+1]H" X3="\\e[$[OY+3];$[OX+2]H" X4="\\e[$[OY+4];$[OX+2]H"
        #012345
        #1   |_
        #2\||/
        #3 \‚ïë|_
        #4  ‚ïë/
        #5  ‚ïë
        #                              1         2          3         4   5
        cut "\\e[$OY;${SX}H$T2C"       ''       ''         ''   "$X1"'|' '_'  #1
        cut "\\e[$[$OY+1];${SX}H$T2C"  '\\'     '|'  "$blk"'|'       '/'      #2
        cut "\\e[$[$OY+2];${SX}H$blk"  ''  "$X2"'\\'       '‚ïë' "$T2C"'|' '_'  #3
        cut "\\e[$[$OY+3];${SX}H$blk"  ''  ''         "$X3"'‚ïë'       '/'      #4
        cut "\\e[$[$OY+4];${SX}H$blk"  ''  ''         "$X4"'‚ïë';;              #5

        *)
        mov && BP2[i2]="tree2 6 5 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP2[i2]; return; }
        X1="\\e[$OY;$[OX+1]H" X2="\\e[$[OY+3];$[OX+1]H" X3="\\e[$[OY+4];$[OX+2]H" X4="\\e[$[OY+5];$[OX+2]H"
        #012345
        #1 _._
        #2/   \
        #3\ | /
        #4 \‚ïë/\
        #5  ‚ïë_/
        #6  ‚ïë
        #                              1       2          3         4         5
        cut "\\e[$OY;${SX}H$T2C"      '' "$X1"'_'        '.'       '_'             #1
        cut "\\e[$[$OY+1];${SX}H$T2C" '/'     ' '        ' '       ' '       '\\'  #2
        cut "\\e[$[$OY+2];${SX}H$T2C" '\\'    ' '  "$blk"'|'       ' ' "$T2C"'/'   #3
        cut "\\e[$[$OY+3];${SX}H$T2C" '' "$X2"'\\' "$blk"'‚ïë' "$T2C"'/'       '\\'  #4
        cut "\\e[$[$OY+4];${SX}H$blk" ''      ''    "$X3"'‚ïë' "$T2C"'_'       '/'   #5
        cut "\\e[$[$OY+5];${SX}H$blk" ''      ''    "$X4"'‚ïë'  ;;
    esac
}

case $month in
    0[1-4]|12) T3C=$SKY$BLD$cyn tree3H=8;; # winter & early spring
    0[5-8]   ) T3C=$SKY$BLD$GRN tree3H=9;; # late spring & summer
    09|1[0-1]) T3C=$SKY$DIM$red tree3H=9;; # autumn
esac
sprite_tree3 () {
    case "$day$month" in
        2[1-9]12|3[0-1]12|0[1-9]01|1001)
        mov && BP3[i3]="tree3 8 12 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP3[i3]; return; }
        X1="\\e[$OY;$[OX+6]H"     X2="\\e[$[OY+1];$[OX+4]H" X3="\\e[$[OY+2];$[OX+4]H" X4="\\e[$[OY+3];$[OX+4]H"
        X5="\\e[$[OY+4];$[OX+2]H" X6="\\e[$[OY+5];$[OX+2]H" X7="\\e[$[OY+7];$[OX+6]H"
        #0123456789ABC
        #1      ‚òÖ
        #2    _‚ùÖ|‚óè
        #3    -/‚óã\‚ùÑ-
        #4    ‚óè/|\\‚óã
        #5  _/‚ùÑ/‚óè\‚ùÖ\
        #6  ‚óã///|\‚ùÑ\‚óè 
        #7_/‚ùÖ/‚óè/|‚óã\‚ùÖ\-
        #8      ‚ïë
        #                             1   2            3         4           5         6         7         8         9         A         B   C
        cut "\\e[$OY;${SX}H$RED"      ''  ''          ''        ''          ''        ''   "$X1"'‚òÖ'                                             #1
        cut "\\e[$[$OY+1];${SX}H$GRN" ''  ''          ''        ''     "$X2"'_' "$cyn"'‚ùÖ' "$GRN"'|' "$BLU"'‚óè'                                   #2
        cut "\\e[$[$OY+2];${SX}H$GRN" ''  ''          ''        ''     "$X3"'-'       '/' "$YLW"'‚óã' "$GRN"'\' "$CYN"'‚ùÑ' "$GRN"'-'               #3
        cut "\\e[$[$OY+3];${SX}H$GRN" ''  ''          ''        '' "$X4$RED"'‚óè' "$GRN"'/'       '|'       '\'       '\' "$ylw"'‚óã'               #4
        cut "\\e[$[$OY+4];${SX}H$GRN" ''  ''     "$X5"'_'       '/'   "$cyn"'‚ùÑ' "$GRN"'/' "$blu"'‚óè' "$GRN"'\' "$cyn"'‚ùÖ' "$GRN"'\'               #5
        cut "\\e[$[$OY+5];${SX}H$GRN" ''  '' "$X6$red"'‚óã' "$GRN"'/'         '/'       '/'       '|'       '\' "$CYN"'‚ùÑ' "$GRN"'\' "$RED"'‚óè'     #6
        cut "\\e[$[$OY+6];${SX}H$GRN" '_' '/'   "$cyn"'‚ùÖ' "$GRN"'/'   "$YLW"'‚óè' "$GRN"'/'       '|' "$RED"'‚óã' "$GRN"'\' "$cyn"'‚ùÖ' "$GRN"'\' '-' #7
        cut "\\e[$[$OY+7];${SX}H$BLK" ''  ''          ''        ''          ''        ''   "$X7"'‚ïë';;                                           #8

        ??0[1-4]|??12)
        mov && BP3[i3]="tree3 8 9 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset BP3[$i]; return; }
        X1="\\e[$OY;$[OX+2]H"     X2="\\e[$[OY+1];$[OX+3]H" X3="\\e[$[OY+3];$[OX+1]H" X4="\\e[$[OY+4];$[OX+3]H"
        X5="\\e[$[OY+5];$[OX+4]H" X6="\\e[$[OY+6];$[OX+4]H" X7="\\e[$[OY+7];$[OX+4]H"
        #0123456789
        #1  \|
        #2   \| |_
        #3_\_ ‚ïë/
        #4 /\ ‚ïë \/_
        #5   \‚ïë /
        #6    ‚ïë/
        #7    ‚ïë
        #8    ‚ïë
        #                              1        2         3         4         5         6         7    8   9
        cut "\\e[$OY;${SX}H$T3C"      ''       ''   "$X1"'\'       '|'                                        #1
        cut "\\e[$[$OY+1];${SX}H$BLK" ''       ''        ''   "$X2"'\\'      '|'       ' ' "$T3C"'|'  '_'     #2
        cut "\\e[$[$OY+2];${SX}H$T3C" '_'      '\\'      '_'       ' ' "$BLK"'‚ïë'       '/'                    #3
        cut "\\e[$[$OY+3];${SX}H$T3C" ''  "$X3"'/'       '\\'      ' ' "$BLK"'‚ïë' "$T3C"' '       '\\' '/' '_' #4
        cut "\\e[$[$OY+4];${SX}H$BLK" ''       ''        ''   "$X4"'\'       '‚ïë'       ' '       '/'          #5
        cut "\\e[$[$OY+5];${SX}H$BLK" ''       ''        ''        ''   "$X5"'‚ïë'       '/'                    #6
        cut "\\e[$[$OY+6];${SX}H$BLK" ''       ''        ''        ''   "$X6"'‚ïë'                              #7
        cut "\\e[$[$OY+7];${SX}H$BLK" ''       ''        ''        ''   "$X7"'‚ïë';;                            #8

        *)
        mov && BP3[i3]="tree3 9 9 $OX $OY $SC $SM $CS $CL $AS $AL" || { unset B3[i3]; return; }
        X1="\\e[$OY;$[OX+3]H"     X2="\\e[$[OY+1];$[OX+2]H" X3="\\e[$[OY+2];$[OX+1]H" X4="\\e[$[OY+5];$[OX+3]H"
        X5="\\e[$[OY+6];$[OX+4]H" X6="\\e[$[OY+7];$[OX+4]H" X7="\\e[$[OY+8];$[OX+4]H"
        #0123456789
        #1   _._
        #2  /   \
        #3 _\ | /
        #4/  \‚ïë/__
        #5\_\/‚ïë/  \
        #6   \‚ïë|/_/
        #7    ‚ïë/
        #8    ‚ïë
        #9    ‚ïë
        #                             1       2          3          4          5         6         7         8   9
        cut "\\e[$OY;${SX}H$T3C"      ''      ''        ''    "$X1"'_'        '.'       '_'                          #1
        cut "\\e[$[$OY+1];${SX}H$T3C" ''      ''   "$X2"'/'        ' '        ' '       ' '       '\\'               #2
        cut "\\e[$[$OY+2];${SX}H$T3C" '' "$X3"'_'       '\\'       ' '  "$BLK"'|'       ' ' "$T3C"'/'                #3
        cut "\\e[$[$OY+3];${SX}H$T3C" '/'     ' '       ' '        '\\' "$BLK"'‚ïë' "$T3C"'/'       '_'       '_'      #4
        cut "\\e[$[$OY+4];${SX}H$T3C" '\\'    '_' "$BLK"'\\' "$T3C"'/'  "$BLK"'‚ïë' "$T3C"'/'       ' '       ' ' '\\' #5
        cut "\\e[$[$OY+5];${SX}H$BLK" ' '     ' '       ' '   "$X4"'\\'       '‚ïë' "$T3C"'|' "$BLK"'/' "$T3C"'_' '/'  #6
        cut "\\e[$[$OY+6];${SX}H$BLK" ''      ''        ''         ''    "$X5"'‚ïë' '/'                                #7
        cut "\\e[$[$OY+7];${SX}H$BLK" ''      ''        ''         ''    "$X6"'‚ïë'                                    #8
        cut "\\e[$[$OY+8];${SX}H$BLK" ''      ''        ''         ''    "$X7"'‚ïë';;                                  #9
    esac
}

#------------------------{ Functions }----------------------------------------------------------------------------------
get_dimensions () {
    size=( $(stty size) )
    endx=${size[1]}
    endy=${size[0]}
enmyendy=$[endy-7]
boomendx=$[endx-10]
bullendx=$[endx-4 ]
heroendx=$[endx-15]
heroendy=$[endy-7 ]
enmyendy=$[endy-7 ]
bossendx=$[endx-11]
bossendy=$[endy-7 ]
bosshbar=$[endx-10]
lineendy=$[endy-2 ]
Sunsendx=$[endx-18]
tre1endy=$[endy-tree1H-2]
tre2endy=$[endy-tree2H-2]
tre3endy=$[endy-tree3H-2]
}

bye () { stty echo; printf "$CON$DEF"; exit $1; }
cut () { screen+="$1"; shift; printf -v spr %s "${@:$CS:$CL}"; screen+="${spr//_Z_/ }$SKY "; }
mov () {
    case $SC in
        0) [[ $OX -le -$OW ]] && return 1
           [[ $AS -ge $AL ]] && AS=0 || ((AS++)) # sprites animation
           [[ $OX -le 1   ]] && ((CS++))
           ((OX--)); ((CL++)); SC=$SM;;
        *) ((SC--));;
    esac
    [[ $OX -le 1 ]] && SX=0 || SX=$OX
}

get_obj_data () {
    OT=${OI[0]}   # object type
    OH=${OI[1]}   # object hight
    OW=${OI[2]}   # object width
    OX=${OI[3]}   # X coordinate
    OY=${OI[4]}   # Y coordinate
    SC=${OI[5]}   # speed counter
    SM=${OI[6]}   # speed max
    CS=${OI[7]}   # cuting start
    CL=${OI[8]}   # cuting lenght
    AS=${OI[9]}   # animation start
    AL=${OI[10]}  # animation lenght
    [[ $OT ]] && sprite_$OT
}

fps_counter () {
    [[ $SECONDS -gt $sec ]] && {
        FPS=$FPSC AVG+=($FPS)
        [[ $FPSL ]] || FPSL=$FPS
        [[ $FPS -gt $FPSM  ]] && FPSM=$FPS
        [[ $FPS -lt $FPSL  ]] && FPSL=$FPS
        (( ${#AVG[@]} == 5 )) && { avg="${AVG[@]}"; FPSA=$(( (${avg// /+})/5 )); AVG=(); }
        sec=$SECONDS
        FPSC=0
    } || ((FPSC++))
}

fill_screen () {
    for ((i=0;         i<$lineendy; i++)); do printf "$SKY%${endx}s"; done
    for ((i=$lineendy; i<$endy;     i++)); do printf "$LND%${endx}s"; done
}

game () {
    #======================================{ Main game loop single or server team mode }================================
    while true; do
        #-{ Empty screen, count fps, set timings}------------------------------
        [[ $M -ge 10 ]] && M=0 || ((M++)) # enemies born rate
        read -t$spd -s -n1 input &> /dev/null
        screen=; fps_counter
        ENM=("${ENM[@]}")
        BP1=("${BP1[@]}")
        BP2=("${BP2[@]}")
        BP3=("${BP3[@]}")

        #-{ Add clouds }-------------------------------------------------------
        case $[RANDOM % $CLD]:$[RANDOM % 3 + 1] in
            0:1) BP1+=("cloud1 3 6  $endx $[RANDOM % 10 + 2] 6 6 1 0 0 0");;
            0:2) BP2+=("cloud2 3 8  $endx $[RANDOM % 10 + 2] 4 4 1 0 0 0");;
            0:3) BP3+=("cloud3 3 11 $endx $[RANDOM % 10 + 2] 2 2 1 0 0 0");;
        esac

        #-{ Add trees }--------------------------------------------------------
        case $[RANDOM % $TRE]:$[RANDOM % 3 + 1] in
            0:1) BP1+=("tree1 3 2 $endx $tre1endy 6 6 1 0 0 0");;
            0:2) BP2+=("tree2 6 5 $endx $tre2endy 4 4 1 0 0 0");;
            0:3) BP3+=("tree3 9 9 $endx $tre3endy 2 2 1 0 0 0");;
        esac

        #-{ Add aliens }-------------------------------------------------------
        [[ $enumber -lt $enmax && $M -eq 0 ]] && {
            ENM+=("alien 3 5 $endx $[RANDOM%enmyendy+3] 0 $[RANDOM%2] 1 0 $[RANDOM%3] 3")
            ((enumber++))
        }

        #-{ Print moving land }------------------------------------------------
        screen+="\e[$lineendy;1H$LND${land:$[1-$LX]:$endx}"; [[ $LX -lt -$[$LN/2] ]] && LX=-1 || ((LX--))

        #-{ Print FPS }--------------------------------------------------------
        screen+="\e[$endy;2H${DEF}FPS:$RED$FPS ${DEF}max:$RED$FPSM ${DEF}low:$RED$FPSL ${DEF}avg:$RED$FPSA "

        #-{ Move bitplans }----------------------------------------------------
        for i1 in ${!BP1[@]}; { OI=(${BP1[i1]}); get_obj_data; }
        for i2 in ${!BP2[@]}; { OI=(${BP2[i2]}); get_obj_data; }
        for en in ${!ENM[@]}; { OI=(${ENM[en]}); get_obj_data; }
        for i3 in ${!BP3[@]}; { OI=(${BP3[i3]}); get_obj_data; }

        #-{ Print everything }-------------------------------------------------
        printf "$screen"
    done
}

#=================================================={ Initialisation }===================================================
trap : ALRM
trap bye INT TERM SIGINT SIGTERM EXIT
get_dimensions; stty -echo; printf "$COF"; clear

#-{ Generate grass }-----------------------------------------------------------
for ((i=0; i<$endx; i++)); do land+=${grass[$[RANDOM % ${#grass[*]}]]}; done; land+=$land; LN=${#land}

fill_screen; game
