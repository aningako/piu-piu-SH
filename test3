#!/usr/bin/env bash
# check bash version
case ${BASH_VERSINFO[@]::2} in [1-3]' '[0-9][0-9]|[1-3]' '[0-9]|'4 '[0-1])
    echo -e "\nYour BASH is too short!) 4.2+ required to run this game, your is - ${BASH_VERSINFO[@]}"
    exit 1;;
esac
. ~/SCR/color
#------------------------{ Start opt }------------------------{ description }-----------------{ def. values }-----------
     enumber=0                                        # current enemy counter                      (0)
       enmax=100                                      # max number of akiens                       (10)
         SKY=$DEF
         spd=0.01                                     # game\read speed                            (0.0001)
         OBJ=()                                       # start obj array
           L=0                                        # sprites animation counter
[[ -e ~/.piuconf ]] && . ~/.piuconf
#------------------------{ Aliens }-------------------------------------------------------------------------------------
#  ___
# ( o )
#  `¯´

small=("${SKY}_Z_  ${SKY}_Z_  ${RED}o"
       "${SKY}_Z_  ${RED}o    ${SKY}_Z_"
       "${RED}o    ${SKY}_Z_  ${SKY}_Z_"
       "${SKY}_Z_  ${SKY}_Z_  ${SKY}_Z_")

sprite_alien () {
    hight=3
    width=5
    mov || return
    cut "\\e[$OY;${SX}H"      "\\e[$OY;$[SX+1]H"      "${SKY}_"  "${SKY}_"  "${SKY}_"
    cut "\\e[$[OY+1];${SX}H"  "$SKY("                          ${small[AS]}            "${SKY})"
    cut "\\e[$[OY+2];${SX}H"  "\\e[$[OY+2];$[SX+1]H"  "${SKY}\`" "${SKY}¯"  "${SKY}´"
    ENM[$i]="$type $OX $OY $SC $SM $CS $CL $AS $AL"
}

#------------------------{ Functions }----------------------------------------------------------------------------------
get_dimensions () {
    size=( $(stty size) )
    endx=${size[1]}
    endy=${size[0]}
enmyendy=$[endy-7]
}

remove_obj () { unset  OBJ[$1]; OBJ=("${OBJ[@]}"); }
erase_obj  () { remove_obj $1 ; for (( k=0; k<$2; k++ )); do screen+="\e[$[OY+k];${OX}H$SKY         "; done; }

bye () { stty echo; printf "$CON$DEF"; exit $1; }
cut () { screen+="$1"; shift; printf -v spr %s "${@:$CS:$CL}"; screen+="${spr//_Z_/ } "; }
mov () {
    [[ $OX -le -$width ]] && {
        [[ $type == 'alien' ]] && ((enumber--))
        remove_obj $i
        return 1
    }
    case $SC in
        0) [[ $OX -le 0   ]] && ((CS++)); ((OX--)); ((CL++)); SC=$SM
           [[ $AS -ge $AL ]] &&   AS=0 || ((AS++));; # sprites animation;;
        *) [[ $SC -gt 0   ]] && ((SC--));;
    esac
    SX=${OX//-*/0} # SX'll be sprite's X coordinate, if OX less then 0 make it 0
}

get_obj_data () {
    type=${OI[0]} # object type
    OX=${OI[1]}   # X coordinate
    OY=${OI[2]}   # Y coordinate
    SC=${OI[3]}   # speed couter
    SM=${OI[4]}   # speed max
    CS=${OI[5]}   # cuting start
    CL=${OI[6]}   # cuting lenght
    AS=${OI[7]}   # animation start
    AL=${OI[8]}   # animation lenght
    [[ $type ]] && sprite_$type
}

fps_counter () {
    [[ $SECONDS -gt $sec ]] && {
        FPS=$FPSC AVG+=($FPS)
        [[ $FPSL ]] || FPSL=$FPS
        [[ $FPS -gt $FPSM  ]] && FPSM=$FPS
        [[ $FPS -lt $FPSL  ]] && FPSL=$FPS
        (( ${#AVG[@]} == 5 )) && { avg="${AVG[@]}"; FPSA=$(( (${avg// /+})/5 )); AVG=(); }
        sec=$SECONDS
        FPSC=0
    } || ((FPSC++))
}

game () {
    #======================================{ Main game loop single or server team mode }================================
    while true; do
        #-{ Empty screen, count fps, set timings}-----------------------------------------------------------------------
        [[ $M -ge 10 ]] && M=0 || ((M++)) # enemies born rate
        read -t$spd -s -n1 input &> /dev/null
        screen=; fps_counter
        #-{ Print FPS }-------------------------------------------------------------------------------------------------
        screen+="\e[$endy;2H${DEF}FPS:$RED$FPS ${DEF}max:$RED$FPSM ${DEF}low:$RED$FPSL ${DEF}avg:$RED$FPSA "
        #-{ Restart aliens }--------------------------------------------------------------------------------------------
        [[ $enumber -lt $enmax && $M -eq 0 ]] && {
            ENM+=("alien $[endx-1] $[RANDOM%$enmyendy+3] 0 $[RANDOM%2] 1 1 $[RANDOM%3] 3")
            ((enumber++))
        }
        #-{ Move\check enemies }----------------------------------------------------------------------------------------
        for i in ${!ENM[@]}; { OI=(${ENM[$i]}); get_obj_data; }

        #-{ Print everything }------------------------------------------------------------------------------------------
        printf "$screen"
    done
}

#--------------------------------------------------{ Initialisation }---------------------------------------------------
trap bye INT TERM SIGINT SIGTERM EXIT
get_dimensions; stty -echo; printf "$COF"; clear
sec=$SECONDS # set timer for FPS counter
OBJ=(); game

